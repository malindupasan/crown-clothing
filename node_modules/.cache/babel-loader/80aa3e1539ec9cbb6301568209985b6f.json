{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyANloTHUccDjXApwDaBEWLFMaqPpY6aORo\",\n  authDomain: \"crwn-clothingdb-235d5.firebaseapp.com\",\n  projectId: \"crwn-clothingdb-235d5\",\n  storageBucket: \"crwn-clothingdb-235d5.appspot.com\",\n  messagingSenderId: \"774882172303\",\n  appId: \"1:774882172303:web:480abf9a6cdbeb28e13ffa\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, provider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = () => {\n  signOu;\n};","map":{"version":3,"sources":["/Users/malindudesilva/Documents/Code/React/crownc/crwn-clothing-v2/src/utils/firebase/firebase.utils.js"],"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","signOu"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SACEC,OADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,8BALF,EAMEC,0BANF,EAOEC,OAPF,QAQO,eARP;AASA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,MAA5B,EAAoCC,MAApC,QAAkD,oBAAlD;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,uCAFS;AAGrBC,EAAAA,SAAS,EAAE,uBAHU;AAIrBC,EAAAA,aAAa,EAAE,mCAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB;AASA,MAAMC,WAAW,GAAGnB,aAAa,CAACY,cAAD,CAAjC;AAEA,MAAMQ,QAAQ,GAAG,IAAIhB,kBAAJ,EAAjB;AAEAgB,QAAQ,CAACC,mBAAT,CAA6B;AAC3BC,EAAAA,MAAM,EAAE;AADmB,CAA7B;AAIA,OAAO,MAAMC,IAAI,GAAGtB,OAAO,EAApB;AACP,OAAO,MAAMuB,qBAAqB,GAAG,MAAMrB,eAAe,CAACoB,IAAD,EAAOH,QAAP,CAAnD;AACP,OAAO,MAAMK,wBAAwB,GAAG,MAAMvB,kBAAkB,CAACqB,IAAD,EAAOH,QAAP,CAAzD;AACP,OAAO,MAAMM,EAAE,GAAGlB,YAAY,EAAvB;AAEP,OAAO,MAAMmB,0BAA0B,GAAG,gBAAOC,QAAP,EAA6C;AAAA,MAA7BC,qBAA6B,uEAAP,EAAO;AACrF,QAAMC,UAAU,GAAGrB,GAAG,CAACiB,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACG,GAAvB,CAAtB;AAEA,QAAMC,YAAY,GAAG,MAAMtB,MAAM,CAACoB,UAAD,CAAjC;;AAEA,MAAI,CAACE,YAAY,CAACC,MAAb,EAAL,EAA4B;AAC1B,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBP,QAA/B;AACA,UAAMQ,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAM1B,MAAM,CAACmB,UAAD,EAAa;AACvBI,QAAAA,WADuB;AAEvBC,QAAAA,KAFuB;AAGvBC,QAAAA,SAHuB;AAIvB,WAAGP;AAJoB,OAAb,CAAZ;AAQD,KATD,CASE,OAAOS,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAK,CAACG,OAA7C;AACD;AACF;;AAED,SAAOX,UAAP;AACD,CAxBM;AA0BP,OAAO,MAAMY,kCAAkC,GAAG,OAAOP,KAAP,EAAaQ,QAAb,KAAyB;AACzE,MAAG,CAACR,KAAD,IAAU,CAACQ,QAAd,EAAwB;AAExB,SAAO,MAAMtC,8BAA8B,CAACkB,IAAD,EAAMY,KAAN,EAAYQ,QAAZ,CAA3C;AACD,CAJM;AAKP,OAAO,MAAMC,kCAAkC,GAAG,OAAOT,KAAP,EAAaQ,QAAb,KAAyB;AACzE,MAAG,CAACR,KAAD,IAAU,CAACQ,QAAd,EAAwB;AAExB,SAAO,MAAMrC,0BAA0B,CAACiB,IAAD,EAAMY,KAAN,EAAYQ,QAAZ,CAAvC;AACD,CAJM;AAMP,OAAO,MAAME,WAAW,GAAC,MAAI;AAC3BC,EAAAA,MAAM;AACP,CAFM","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut\n} from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyANloTHUccDjXApwDaBEWLFMaqPpY6aORo\",\n  authDomain: \"crwn-clothingdb-235d5.firebaseapp.com\",\n  projectId: \"crwn-clothingdb-235d5\",\n  storageBucket: \"crwn-clothingdb-235d5.appspot.com\",\n  messagingSenderId: \"774882172303\",\n  appId: \"1:774882172303:web:480abf9a6cdbeb28e13ffa\"\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst provider = new GoogleAuthProvider();\n\nprovider.setCustomParameters({\n  prompt: 'select_account',\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, provider);\nexport const db = getFirestore();\n\nexport const createUserDocumentFromAuth = async (userAuth,additionalInformation={}) => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n\n      \n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  return userDocRef;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email,password) =>{\n  if(!email || !password) return ;\n  \n  return await createUserWithEmailAndPassword(auth,email,password)\n}\nexport const signInAuthUserWithEmailAndPassword = async (email,password) =>{\n  if(!email || !password) return ;\n  \n  return await signInWithEmailAndPassword(auth,email,password)\n}\n\nexport const signOutUser=()=>{\n  signOu\n}"]},"metadata":{},"sourceType":"module"}